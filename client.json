{
	"isNode": false,
	"isJs": true,
	"version": "1.0.0",
	"title": "Lyda API",
	"description": "Explorer lyda api.",
	"isSecure": false,
	"domain": "http://localhost",
	"baseUrl": "http://localhost/rest/v1",
	"services": [
		{
			"name": "Auth",
			"serviceName": "Auth",
			"version": "1.0.0",
			"methods": [
				{
					"path": "/auth/actions",
					"methodName": "actions",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "actions - Get model actions",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "model",
							"in": "query",
							"description": "model name or empty for all models",
							"required": false,
							"type": "string",
							"camelCaseName": "model",
							"isQueryParameter": true,
							"cardinality": "?"
						},
						{
							"name": "full",
							"in": "query",
							"description": "true to return full action properties, or only action names",
							"required": false,
							"type": "boolean",
							"camelCaseName": "full",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				}
			]
		},
		{
			"name": "Roles",
			"serviceName": "Roles",
			"version": "1.0.0",
			"methods": [
				{
					"path": "/roles/users/{roleIdOrName}",
					"methodName": "findUsers",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Find role users by scoped role id or name",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "roleIdOrName",
							"in": "path",
							"description": "Role name with scope or role id without scope",
							"required": true,
							"type": "string",
							"camelCaseName": "roleIdOrName",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "scopeType",
							"in": "query",
							"description": "Scope type to find in. It could be \"Org\" or \"Team\"",
							"required": true,
							"type": "string",
							"camelCaseName": "scopeType",
							"isQueryParameter": true,
							"cardinality": ""
						},
						{
							"name": "scopeId",
							"in": "query",
							"description": "Scope id according to scope type",
							"required": true,
							"type": "string",
							"camelCaseName": "scopeId",
							"isQueryParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/roles/org/{orgId}/teams/role/{role}/users",
					"methodName": "findOrgTeamRoleUsers",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Find users of Team Role for Org",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "orgId",
							"in": "path",
							"description": "Org id",
							"required": true,
							"type": "string",
							"camelCaseName": "orgId",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "role",
							"in": "path",
							"description": "Role names of team",
							"required": true,
							"type": "string",
							"camelCaseName": "role",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				}
			]
		},
		{
			"name": "Account",
			"serviceName": "Account",
			"version": "1.0.0",
			"methods": [
				{
					"path": "/accounts/{id}/accessTokens/{fk}",
					"methodName": "prototype$__findById__accessTokens",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Find a related item by id for accessTokens.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Account id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "fk",
							"in": "path",
							"description": "Foreign key for accessTokens",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "fk",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/{id}/accessTokens/{fk}",
					"methodName": "prototype$__destroyById__accessTokens",
					"method": "DELETE",
					"isGET": false,
					"isPOST": false,
					"summary": "Delete a related item by id for accessTokens.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Account id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "fk",
							"in": "path",
							"description": "Foreign key for accessTokens",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "fk",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/{id}/accessTokens/{fk}",
					"methodName": "prototype$__updateById__accessTokens",
					"method": "PUT",
					"isGET": false,
					"isPOST": false,
					"summary": "Update a related item by id for accessTokens.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Account id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "fk",
							"in": "path",
							"description": "Foreign key for accessTokens",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "fk",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"required": false,
							"schema": {
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"ttl": {
										"default": 1209600,
										"description": "time to live in seconds (2 weeks by default)",
										"type": "Number",
										"format": "double",
										"name": "ttl",
										"camelCaseName": "ttl"
									},
									"created": {
										"type": "String",
										"format": "date-time",
										"name": "created",
										"camelCaseName": "created"
									},
									"userId": {
										"type": "String",
										"name": "userId",
										"camelCaseName": "userId"
									}
								},
								"required": [
									"id"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/{id}/repos/{fk}",
					"methodName": "prototype$__findById__repos",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Find a related item by id for repos.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Account id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "fk",
							"in": "path",
							"description": "Foreign key for repos",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "fk",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/{id}/repos/{fk}",
					"methodName": "prototype$__destroyById__repos",
					"method": "DELETE",
					"isGET": false,
					"isPOST": false,
					"summary": "Delete a related item by id for repos.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Account id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "fk",
							"in": "path",
							"description": "Foreign key for repos",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "fk",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/{id}/repos/{fk}",
					"methodName": "prototype$__updateById__repos",
					"method": "PUT",
					"isGET": false,
					"isPOST": false,
					"summary": "Update a related item by id for repos.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Account id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "fk",
							"in": "path",
							"description": "Foreign key for repos",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "fk",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"required": false,
							"schema": {
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"description": {
										"type": "String",
										"name": "description",
										"camelCaseName": "description"
									},
									"private": {
										"default": true,
										"type": "Boolean",
										"name": "private",
										"camelCaseName": "private"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									}
								},
								"required": [
									"id",
									"name",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/{id}/namespace",
					"methodName": "prototype$__get__namespace",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Fetches hasOne relation namespace.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Account id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "refresh",
							"in": "query",
							"required": false,
							"type": "boolean",
							"camelCaseName": "refresh",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/{id}/namespace",
					"methodName": "prototype$__create__namespace",
					"method": "POST",
					"isGET": false,
					"isPOST": true,
					"summary": "Creates a new instance in namespace of this model.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Account id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"required": false,
							"schema": {
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"description": {
										"default": "",
										"type": "String",
										"name": "description",
										"camelCaseName": "description"
									},
									"avatar": {
										"type": "String",
										"name": "avatar",
										"camelCaseName": "avatar"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									}
								},
								"required": [
									"id",
									"name",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/{id}/namespace",
					"methodName": "prototype$__update__namespace",
					"method": "PUT",
					"isGET": false,
					"isPOST": false,
					"summary": "Update namespace of this model.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Account id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"required": false,
							"schema": {
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"description": {
										"default": "",
										"type": "String",
										"name": "description",
										"camelCaseName": "description"
									},
									"avatar": {
										"type": "String",
										"name": "avatar",
										"camelCaseName": "avatar"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									}
								},
								"required": [
									"id",
									"name",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/{id}/namespace",
					"methodName": "prototype$__destroy__namespace",
					"method": "DELETE",
					"isGET": false,
					"isPOST": false,
					"summary": "Deletes namespace of this model.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Account id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/{id}/accessTokens",
					"methodName": "prototype$__get__accessTokens",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Queries accessTokens of Account.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Account id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "filter",
							"in": "query",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/{id}/accessTokens",
					"methodName": "prototype$__create__accessTokens",
					"method": "POST",
					"isGET": false,
					"isPOST": true,
					"summary": "Creates a new instance in accessTokens of this model.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Account id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"required": false,
							"schema": {
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"ttl": {
										"default": 1209600,
										"description": "time to live in seconds (2 weeks by default)",
										"type": "Number",
										"format": "double",
										"name": "ttl",
										"camelCaseName": "ttl"
									},
									"created": {
										"type": "String",
										"format": "date-time",
										"name": "created",
										"camelCaseName": "created"
									},
									"userId": {
										"type": "String",
										"name": "userId",
										"camelCaseName": "userId"
									}
								},
								"required": [
									"id"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/{id}/accessTokens",
					"methodName": "prototype$__delete__accessTokens",
					"method": "DELETE",
					"isGET": false,
					"isPOST": false,
					"summary": "Deletes all accessTokens of this model.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Account id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/{id}/accessTokens/count",
					"methodName": "prototype$__count__accessTokens",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Counts accessTokens of Account.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Account id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "where",
							"in": "query",
							"description": "Criteria to match model instances",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "where",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/{id}/repos",
					"methodName": "prototype$__get__repos",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Queries repos of Account.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Account id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "filter",
							"in": "query",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/{id}/repos",
					"methodName": "prototype$__create__repos",
					"method": "POST",
					"isGET": false,
					"isPOST": true,
					"summary": "Creates a new instance in repos of this model.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Account id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"required": false,
							"schema": {
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"description": {
										"type": "String",
										"name": "description",
										"camelCaseName": "description"
									},
									"private": {
										"default": true,
										"type": "Boolean",
										"name": "private",
										"camelCaseName": "private"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									}
								},
								"required": [
									"id",
									"name",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/{id}/repos/count",
					"methodName": "prototype$__count__repos",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Counts repos of Account.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Account id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "where",
							"in": "query",
							"description": "Criteria to match model instances",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "where",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts",
					"methodName": "create",
					"method": "POST",
					"isGET": false,
					"isPOST": true,
					"summary": "Create a new instance of the model and persist it into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "data",
							"in": "body",
							"description": "Model instance data",
							"required": false,
							"schema": {
								"description": "Model instance data",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"username": {
										"type": "String",
										"name": "username",
										"camelCaseName": "username"
									},
									"email": {
										"type": "String",
										"name": "email",
										"camelCaseName": "email"
									},
									"mobile": {
										"type": "String",
										"name": "mobile",
										"camelCaseName": "mobile"
									},
									"fullname": {
										"type": "String",
										"name": "fullname",
										"camelCaseName": "fullname"
									},
									"gender": {
										"type": "String",
										"name": "gender",
										"camelCaseName": "gender"
									},
									"birthday": {
										"type": "String",
										"format": "date-time",
										"name": "birthday",
										"camelCaseName": "birthday"
									},
									"profile": {
										"type": "Object",
										"name": "profile",
										"camelCaseName": "profile"
									},
									"enabled": {
										"default": true,
										"type": "Boolean",
										"name": "enabled",
										"camelCaseName": "enabled"
									},
									"realm": {
										"type": "String",
										"name": "realm",
										"camelCaseName": "realm"
									},
									"emailVerified": {
										"type": "Boolean",
										"name": "emailVerified",
										"camelCaseName": "emailVerified"
									},
									"avatar": {
										"type": "String",
										"name": "avatar",
										"camelCaseName": "avatar"
									}
								},
								"required": [
									"id"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts",
					"methodName": "patchOrCreate",
					"method": "PATCH",
					"isGET": false,
					"isPOST": false,
					"summary": "Patch an existing model instance or insert a new one into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "data",
							"in": "body",
							"description": "Model instance data",
							"required": false,
							"schema": {
								"description": "Model instance data",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"username": {
										"type": "String",
										"name": "username",
										"camelCaseName": "username"
									},
									"email": {
										"type": "String",
										"name": "email",
										"camelCaseName": "email"
									},
									"mobile": {
										"type": "String",
										"name": "mobile",
										"camelCaseName": "mobile"
									},
									"fullname": {
										"type": "String",
										"name": "fullname",
										"camelCaseName": "fullname"
									},
									"gender": {
										"type": "String",
										"name": "gender",
										"camelCaseName": "gender"
									},
									"birthday": {
										"type": "String",
										"format": "date-time",
										"name": "birthday",
										"camelCaseName": "birthday"
									},
									"profile": {
										"type": "Object",
										"name": "profile",
										"camelCaseName": "profile"
									},
									"enabled": {
										"default": true,
										"type": "Boolean",
										"name": "enabled",
										"camelCaseName": "enabled"
									},
									"realm": {
										"type": "String",
										"name": "realm",
										"camelCaseName": "realm"
									},
									"emailVerified": {
										"type": "Boolean",
										"name": "emailVerified",
										"camelCaseName": "emailVerified"
									},
									"avatar": {
										"type": "String",
										"name": "avatar",
										"camelCaseName": "avatar"
									}
								},
								"required": [
									"id"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts",
					"methodName": "find",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Find all instances of the model matched by filter from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields, where, include, order, offset, and limit",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/{id}/exists",
					"methodName": "exists__get_accounts__id__exists",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Check whether a model instance exists in the data source.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/{id}",
					"methodName": "exists__head_accounts__id_",
					"method": "HEAD",
					"isGET": false,
					"isPOST": false,
					"summary": "Check whether a model instance exists in the data source.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/{id}",
					"methodName": "findById",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Find a model instance by {{id}} from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields and include",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/{id}",
					"methodName": "replaceById__put_accounts__id_",
					"method": "PUT",
					"isGET": false,
					"isPOST": false,
					"summary": "Replace attributes for a model instance and persist it into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"description": "Model instance data",
							"required": false,
							"schema": {
								"description": "Model instance data",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"username": {
										"type": "String",
										"name": "username",
										"camelCaseName": "username"
									},
									"email": {
										"type": "String",
										"name": "email",
										"camelCaseName": "email"
									},
									"mobile": {
										"type": "String",
										"name": "mobile",
										"camelCaseName": "mobile"
									},
									"fullname": {
										"type": "String",
										"name": "fullname",
										"camelCaseName": "fullname"
									},
									"gender": {
										"type": "String",
										"name": "gender",
										"camelCaseName": "gender"
									},
									"birthday": {
										"type": "String",
										"format": "date-time",
										"name": "birthday",
										"camelCaseName": "birthday"
									},
									"profile": {
										"type": "Object",
										"name": "profile",
										"camelCaseName": "profile"
									},
									"enabled": {
										"default": true,
										"type": "Boolean",
										"name": "enabled",
										"camelCaseName": "enabled"
									},
									"realm": {
										"type": "String",
										"name": "realm",
										"camelCaseName": "realm"
									},
									"emailVerified": {
										"type": "Boolean",
										"name": "emailVerified",
										"camelCaseName": "emailVerified"
									},
									"avatar": {
										"type": "String",
										"name": "avatar",
										"camelCaseName": "avatar"
									}
								},
								"required": [
									"id"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/{id}",
					"methodName": "deleteById",
					"method": "DELETE",
					"isGET": false,
					"isPOST": false,
					"summary": "Delete a model instance by {{id}} from the data source.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/{id}",
					"methodName": "prototype$patchAttributes",
					"method": "PATCH",
					"isGET": false,
					"isPOST": false,
					"summary": "Patch attributes for a model instance and persist it into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Account id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"description": "An object of model property name/value pairs",
							"required": false,
							"schema": {
								"description": "An object of model property name/value pairs",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"username": {
										"type": "String",
										"name": "username",
										"camelCaseName": "username"
									},
									"email": {
										"type": "String",
										"name": "email",
										"camelCaseName": "email"
									},
									"mobile": {
										"type": "String",
										"name": "mobile",
										"camelCaseName": "mobile"
									},
									"fullname": {
										"type": "String",
										"name": "fullname",
										"camelCaseName": "fullname"
									},
									"gender": {
										"type": "String",
										"name": "gender",
										"camelCaseName": "gender"
									},
									"birthday": {
										"type": "String",
										"format": "date-time",
										"name": "birthday",
										"camelCaseName": "birthday"
									},
									"profile": {
										"type": "Object",
										"name": "profile",
										"camelCaseName": "profile"
									},
									"enabled": {
										"default": true,
										"type": "Boolean",
										"name": "enabled",
										"camelCaseName": "enabled"
									},
									"realm": {
										"type": "String",
										"name": "realm",
										"camelCaseName": "realm"
									},
									"emailVerified": {
										"type": "Boolean",
										"name": "emailVerified",
										"camelCaseName": "emailVerified"
									},
									"avatar": {
										"type": "String",
										"name": "avatar",
										"camelCaseName": "avatar"
									}
								},
								"required": [
									"id"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/{id}/replace",
					"methodName": "replaceById__post_accounts__id__replace",
					"method": "POST",
					"isGET": false,
					"isPOST": true,
					"summary": "Replace attributes for a model instance and persist it into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"description": "Model instance data",
							"required": false,
							"schema": {
								"description": "Model instance data",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"username": {
										"type": "String",
										"name": "username",
										"camelCaseName": "username"
									},
									"email": {
										"type": "String",
										"name": "email",
										"camelCaseName": "email"
									},
									"mobile": {
										"type": "String",
										"name": "mobile",
										"camelCaseName": "mobile"
									},
									"fullname": {
										"type": "String",
										"name": "fullname",
										"camelCaseName": "fullname"
									},
									"gender": {
										"type": "String",
										"name": "gender",
										"camelCaseName": "gender"
									},
									"birthday": {
										"type": "String",
										"format": "date-time",
										"name": "birthday",
										"camelCaseName": "birthday"
									},
									"profile": {
										"type": "Object",
										"name": "profile",
										"camelCaseName": "profile"
									},
									"enabled": {
										"default": true,
										"type": "Boolean",
										"name": "enabled",
										"camelCaseName": "enabled"
									},
									"realm": {
										"type": "String",
										"name": "realm",
										"camelCaseName": "realm"
									},
									"emailVerified": {
										"type": "Boolean",
										"name": "emailVerified",
										"camelCaseName": "emailVerified"
									},
									"avatar": {
										"type": "String",
										"name": "avatar",
										"camelCaseName": "avatar"
									}
								},
								"required": [
									"id"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/findOne",
					"methodName": "findOne",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Find first instance of the model matched by filter from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields, where, include, order, offset, and limit",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/count",
					"methodName": "count",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Count instances of the model matched by where from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "where",
							"in": "query",
							"description": "Criteria to match model instances",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "where",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/login",
					"methodName": "login",
					"method": "POST",
					"isGET": false,
					"isPOST": true,
					"summary": "Login a user with username/email and password.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "credentials",
							"in": "body",
							"required": true,
							"schema": {
								"type": "object"
							},
							"camelCaseName": "credentials",
							"isBodyParameter": true,
							"cardinality": ""
						},
						{
							"name": "include",
							"in": "query",
							"description": "Related objects to include in the response. See the description of return value for more details.",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "include",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/logout",
					"methodName": "logout",
					"method": "POST",
					"isGET": false,
					"isPOST": true,
					"summary": "Logout a user with access token.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/confirm",
					"methodName": "confirm",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Confirm a user registration with email verification token.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "uid",
							"in": "query",
							"required": true,
							"type": "string",
							"camelCaseName": "uid",
							"isQueryParameter": true,
							"cardinality": ""
						},
						{
							"name": "token",
							"in": "query",
							"required": true,
							"type": "string",
							"camelCaseName": "token",
							"isQueryParameter": true,
							"cardinality": ""
						},
						{
							"name": "redirect",
							"in": "query",
							"required": false,
							"type": "string",
							"camelCaseName": "redirect",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/reset",
					"methodName": "resetPassword",
					"method": "POST",
					"isGET": false,
					"isPOST": true,
					"summary": "Reset password for a user with email.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "options",
							"in": "body",
							"required": true,
							"schema": {
								"type": "object"
							},
							"camelCaseName": "options",
							"isBodyParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/password",
					"methodName": "changePassword",
					"method": "PATCH",
					"isGET": false,
					"isPOST": false,
					"summary": "Change current password",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "oldPassword",
							"in": "formData",
							"description": "The user old password",
							"required": true,
							"type": "string",
							"camelCaseName": "oldPassword",
							"isFormParameter": true,
							"cardinality": ""
						},
						{
							"name": "newPassword",
							"in": "formData",
							"description": "The user NEW password",
							"required": true,
							"type": "string",
							"camelCaseName": "newPassword",
							"isFormParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/{identity}/enable",
					"methodName": "enable",
					"method": "PUT",
					"isGET": false,
					"isPOST": false,
					"summary": "Enable account",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "identity",
							"in": "path",
							"description": "The id, username or email of the account",
							"required": true,
							"type": "string",
							"camelCaseName": "identity",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/{identity}/disable",
					"methodName": "disable",
					"method": "PUT",
					"isGET": false,
					"isPOST": false,
					"summary": "Disable account",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "identity",
							"in": "path",
							"description": "The id, username or email of the account",
							"required": true,
							"type": "string",
							"camelCaseName": "identity",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/{id}/avatar",
					"methodName": "uploadAvatar",
					"method": "POST",
					"isGET": false,
					"isPOST": true,
					"summary": "Upload avatar",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/{id}/avatar",
					"methodName": "downloadAvatar",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Get avatar",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/accounts/{id}/avatar",
					"methodName": "removeAvatar",
					"method": "DELETE",
					"isGET": false,
					"isPOST": false,
					"summary": "Remove avatar",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				}
			]
		},
		{
			"name": "Org",
			"serviceName": "Org",
			"version": "1.0.0",
			"methods": [
				{
					"path": "/orgs/{id}/namespace",
					"methodName": "prototype$__get__namespace",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Fetches hasOne relation namespace.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Org id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "refresh",
							"in": "query",
							"required": false,
							"type": "boolean",
							"camelCaseName": "refresh",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/orgs/{id}/namespace",
					"methodName": "prototype$__create__namespace",
					"method": "POST",
					"isGET": false,
					"isPOST": true,
					"summary": "Creates a new instance in namespace of this model.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Org id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"required": false,
							"schema": {
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"description": {
										"default": "",
										"type": "String",
										"name": "description",
										"camelCaseName": "description"
									},
									"avatar": {
										"type": "String",
										"name": "avatar",
										"camelCaseName": "avatar"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									}
								},
								"required": [
									"id",
									"name",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/orgs/{id}/namespace",
					"methodName": "prototype$__update__namespace",
					"method": "PUT",
					"isGET": false,
					"isPOST": false,
					"summary": "Update namespace of this model.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Org id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"required": false,
							"schema": {
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"description": {
										"default": "",
										"type": "String",
										"name": "description",
										"camelCaseName": "description"
									},
									"avatar": {
										"type": "String",
										"name": "avatar",
										"camelCaseName": "avatar"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									}
								},
								"required": [
									"id",
									"name",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/orgs/{id}/namespace",
					"methodName": "prototype$__destroy__namespace",
					"method": "DELETE",
					"isGET": false,
					"isPOST": false,
					"summary": "Deletes namespace of this model.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Org id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/orgs/{id}/teams",
					"methodName": "prototype$__get__teams",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Queries teams of Org.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Org id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "filter",
							"in": "query",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/orgs/{id}/teams",
					"methodName": "prototype$__create__teams",
					"method": "POST",
					"isGET": false,
					"isPOST": true,
					"summary": "Creates a new instance in teams of this model.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Org id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"required": false,
							"schema": {
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"orgId": {
										"type": "String",
										"name": "orgId",
										"camelCaseName": "orgId"
									},
									"enabled": {
										"default": true,
										"type": "Boolean",
										"name": "enabled",
										"camelCaseName": "enabled"
									},
									"avatar": {
										"type": "String",
										"name": "avatar",
										"camelCaseName": "avatar"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									}
								},
								"required": [
									"id",
									"name",
									"orgId",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/orgs/{id}/teams/count",
					"methodName": "prototype$__count__teams",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Counts teams of Org.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Org id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "where",
							"in": "query",
							"description": "Criteria to match model instances",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "where",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/orgs/{id}/repos",
					"methodName": "prototype$__get__repos",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Queries repos of Org.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Org id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "filter",
							"in": "query",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/orgs/{id}/repos",
					"methodName": "prototype$__create__repos",
					"method": "POST",
					"isGET": false,
					"isPOST": true,
					"summary": "Creates a new instance in repos of this model.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Org id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"required": false,
							"schema": {
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"description": {
										"type": "String",
										"name": "description",
										"camelCaseName": "description"
									},
									"private": {
										"default": true,
										"type": "Boolean",
										"name": "private",
										"camelCaseName": "private"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									}
								},
								"required": [
									"id",
									"name",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/orgs/{id}/repos/count",
					"methodName": "prototype$__count__repos",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Counts repos of Org.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Org id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "where",
							"in": "query",
							"description": "Criteria to match model instances",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "where",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/orgs",
					"methodName": "create",
					"method": "POST",
					"isGET": false,
					"isPOST": true,
					"summary": "create - Create a new instance of the model and persist it into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "data",
							"in": "body",
							"description": "Model instance data",
							"required": false,
							"schema": {
								"description": "Model instance data",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"enabled": {
										"default": true,
										"type": "Boolean",
										"name": "enabled",
										"camelCaseName": "enabled"
									},
									"avatar": {
										"type": "String",
										"name": "avatar",
										"camelCaseName": "avatar"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									}
								},
								"required": [
									"id",
									"name",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/orgs",
					"methodName": "patchOrCreate",
					"method": "PUT",
					"isGET": false,
					"isPOST": false,
					"summary": "patchOrCreate - Patch an existing model instance or insert a new one into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "data",
							"in": "body",
							"description": "Model instance data",
							"required": false,
							"schema": {
								"description": "Model instance data",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"enabled": {
										"default": true,
										"type": "Boolean",
										"name": "enabled",
										"camelCaseName": "enabled"
									},
									"avatar": {
										"type": "String",
										"name": "avatar",
										"camelCaseName": "avatar"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									}
								},
								"required": [
									"id",
									"name",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/orgs",
					"methodName": "find",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "find - Find all instances of the model matched by filter from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields, where, include, order, offset, and limit",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/orgs/{id}/exists",
					"methodName": "exists",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "exists - Check whether a model instance exists in the data source.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/orgs/{id}",
					"methodName": "findById",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "findById - Find a model instance by {{id}} from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields and include",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/orgs/{id}",
					"methodName": "deleteById",
					"method": "DELETE",
					"isGET": false,
					"isPOST": false,
					"summary": "deleteById - Delete a model instance by {{id}} from the data source.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/orgs/{id}",
					"methodName": "prototype$patchAttributes",
					"method": "PUT",
					"isGET": false,
					"isPOST": false,
					"summary": "patchAttributes - Patch attributes for a model instance and persist it into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Org id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"description": "An object of model property name/value pairs",
							"required": false,
							"schema": {
								"description": "An object of model property name/value pairs",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"enabled": {
										"default": true,
										"type": "Boolean",
										"name": "enabled",
										"camelCaseName": "enabled"
									},
									"avatar": {
										"type": "String",
										"name": "avatar",
										"camelCaseName": "avatar"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									}
								},
								"required": [
									"id",
									"name",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/orgs/findOne",
					"methodName": "findOne",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "findOne - Find first instance of the model matched by filter from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields, where, include, order, offset, and limit",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/orgs/count",
					"methodName": "count",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "count - Count instances of the model matched by where from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "where",
							"in": "query",
							"description": "Criteria to match model instances",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "where",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/orgs/{id}/avatar",
					"methodName": "uploadAvatar",
					"method": "POST",
					"isGET": false,
					"isPOST": true,
					"summary": "Upload avatar",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/orgs/{id}/avatar",
					"methodName": "downloadAvatar",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Get avatar",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/orgs/{id}/avatar",
					"methodName": "removeAvatar",
					"method": "DELETE",
					"isGET": false,
					"isPOST": false,
					"summary": "Remove avatar",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/orgs/{id}/roles",
					"methodName": "findRoles",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Query roles of Org.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "The id of the organization",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields, where, include, order, offset, and limit",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/orgs/{id}/membership/{username}",
					"methodName": "checkMembershipForUser",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Check if a user is, publicly or privately, a member of the org.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "The id of the  org",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "username",
							"in": "path",
							"description": "The username to check",
							"required": true,
							"type": "string",
							"camelCaseName": "username",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/orgs/{id}/memberships/{username}",
					"methodName": "getMembershipsForUser",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "In order to get a user's membership with an org, the authenticated user must be an org member.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "The id of the  org",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "username",
							"in": "path",
							"description": "The username",
							"required": true,
							"type": "string",
							"camelCaseName": "username",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/orgs/{id}/memberships/{username}",
					"methodName": "addMembership",
					"method": "PUT",
					"isGET": false,
					"isPOST": false,
					"summary": "In order to create or update a user's membership with an org, the authenticated user must be an org owner.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "The id of the  org",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "username",
							"in": "path",
							"description": "The username",
							"required": true,
							"type": "string",
							"camelCaseName": "username",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "role",
							"in": "formData",
							"description": "The role name",
							"required": false,
							"type": "string",
							"camelCaseName": "role",
							"isFormParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/orgs/{id}/memberships/{username}",
					"methodName": "removeMembership",
					"method": "DELETE",
					"isGET": false,
					"isPOST": false,
					"summary": "In order to remove a user's membership with an org, the authenticated user must be an org owner.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "The id of the  org",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "username",
							"in": "path",
							"description": "The username",
							"required": true,
							"type": "string",
							"camelCaseName": "username",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/orgs/{id}/memberships",
					"methodName": "getMemberships",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "List all users who are members of an organization org, the authenticated user must be an org member.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "The id of the  org",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "where",
							"in": "query",
							"description": "The condition for query. default is all.\n - role: [\"admin\", \"member\", \"manager\", \"all\"]",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "where",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/orgs/{id}/invitations",
					"methodName": "invitations",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "List pending org invitations",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "The id of the  org",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "filter",
							"in": "query",
							"description": "Filter for membership",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				}
			]
		},
		{
			"name": "Form",
			"serviceName": "Form",
			"version": "1.0.0",
			"methods": [
				{
					"path": "/forms/{id}/owner",
					"methodName": "prototype$__get__owner",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Fetches belongsTo relation owner.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Form id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "refresh",
							"in": "query",
							"required": false,
							"type": "boolean",
							"camelCaseName": "refresh",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/forms/{id}/repo",
					"methodName": "prototype$__get__repo",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Fetches belongsTo relation repo.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Form id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "refresh",
							"in": "query",
							"required": false,
							"type": "boolean",
							"camelCaseName": "refresh",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/forms",
					"methodName": "create",
					"method": "POST",
					"isGET": false,
					"isPOST": true,
					"summary": "Create a new instance of the model and persist it into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "data",
							"in": "body",
							"description": "Model instance data",
							"required": false,
							"schema": {
								"description": "Model instance data",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"definition": {
										"type": "Object",
										"name": "definition",
										"camelCaseName": "definition"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									},
									"repoId": {
										"type": "String",
										"name": "repoId",
										"camelCaseName": "repoId"
									}
								},
								"required": [
									"id",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/forms",
					"methodName": "patchOrCreate",
					"method": "PATCH",
					"isGET": false,
					"isPOST": false,
					"summary": "Patch an existing model instance or insert a new one into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "data",
							"in": "body",
							"description": "Model instance data",
							"required": false,
							"schema": {
								"description": "Model instance data",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"definition": {
										"type": "Object",
										"name": "definition",
										"camelCaseName": "definition"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									},
									"repoId": {
										"type": "String",
										"name": "repoId",
										"camelCaseName": "repoId"
									}
								},
								"required": [
									"id",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/forms",
					"methodName": "find",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Find all instances of the model matched by filter from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields, where, include, order, offset, and limit",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/forms/{id}/exists",
					"methodName": "exists__get_forms__id__exists",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Check whether a model instance exists in the data source.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/forms/{id}",
					"methodName": "exists__head_forms__id_",
					"method": "HEAD",
					"isGET": false,
					"isPOST": false,
					"summary": "Check whether a model instance exists in the data source.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/forms/{id}",
					"methodName": "findById",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Find a model instance by {{id}} from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields and include",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/forms/{id}",
					"methodName": "deleteById",
					"method": "DELETE",
					"isGET": false,
					"isPOST": false,
					"summary": "Delete a model instance by {{id}} from the data source.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/forms/{id}",
					"methodName": "prototype$patchAttributes",
					"method": "PATCH",
					"isGET": false,
					"isPOST": false,
					"summary": "Patch attributes for a model instance and persist it into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Form id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"description": "An object of model property name/value pairs",
							"required": false,
							"schema": {
								"description": "An object of model property name/value pairs",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"definition": {
										"type": "Object",
										"name": "definition",
										"camelCaseName": "definition"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									},
									"repoId": {
										"type": "String",
										"name": "repoId",
										"camelCaseName": "repoId"
									}
								},
								"required": [
									"id",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/forms/findOne",
					"methodName": "findOne",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Find first instance of the model matched by filter from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields, where, include, order, offset, and limit",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/forms/count",
					"methodName": "count",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Count instances of the model matched by where from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "where",
							"in": "query",
							"description": "Criteria to match model instances",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "where",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				}
			]
		},
		{
			"name": "Team",
			"serviceName": "Team",
			"version": "1.0.0",
			"methods": [
				{
					"path": "/teams/{id}/org",
					"methodName": "prototype$__get__org",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Fetches belongsTo relation org.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Team id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "refresh",
							"in": "query",
							"required": false,
							"type": "boolean",
							"camelCaseName": "refresh",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/teams",
					"methodName": "patchOrCreate",
					"method": "PUT",
					"isGET": false,
					"isPOST": false,
					"summary": "patchOrCreate - Patch an existing model instance or insert a new one into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "data",
							"in": "body",
							"description": "Model instance data",
							"required": false,
							"schema": {
								"description": "Model instance data",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"orgId": {
										"type": "String",
										"name": "orgId",
										"camelCaseName": "orgId"
									},
									"enabled": {
										"default": true,
										"type": "Boolean",
										"name": "enabled",
										"camelCaseName": "enabled"
									},
									"avatar": {
										"type": "String",
										"name": "avatar",
										"camelCaseName": "avatar"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									}
								},
								"required": [
									"id",
									"name",
									"orgId",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/teams",
					"methodName": "find",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "find - Find all instances of the model matched by filter from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields, where, include, order, offset, and limit",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/teams/{id}/exists",
					"methodName": "exists",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "exists - Check whether a model instance exists in the data source.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/teams/{id}",
					"methodName": "findById",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "findById - Find a model instance by {{id}} from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields and include",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/teams/{id}",
					"methodName": "deleteById",
					"method": "DELETE",
					"isGET": false,
					"isPOST": false,
					"summary": "deleteById - Delete a model instance by {{id}} from the data source.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/teams/{id}",
					"methodName": "prototype$patchAttributes",
					"method": "PUT",
					"isGET": false,
					"isPOST": false,
					"summary": "patchAttributes - Patch attributes for a model instance and persist it into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Team id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"description": "An object of model property name/value pairs",
							"required": false,
							"schema": {
								"description": "An object of model property name/value pairs",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"orgId": {
										"type": "String",
										"name": "orgId",
										"camelCaseName": "orgId"
									},
									"enabled": {
										"default": true,
										"type": "Boolean",
										"name": "enabled",
										"camelCaseName": "enabled"
									},
									"avatar": {
										"type": "String",
										"name": "avatar",
										"camelCaseName": "avatar"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									}
								},
								"required": [
									"id",
									"name",
									"orgId",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/teams/findOne",
					"methodName": "findOne",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "findOne - Find first instance of the model matched by filter from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields, where, include, order, offset, and limit",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/teams/count",
					"methodName": "count",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "count - Count instances of the model matched by where from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "where",
							"in": "query",
							"description": "Criteria to match model instances",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "where",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/teams/{id}/enable",
					"methodName": "enable",
					"method": "PUT",
					"isGET": false,
					"isPOST": false,
					"summary": "enable - Enable a disabled team",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Team id",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/teams/{id}/disable",
					"methodName": "disable",
					"method": "PUT",
					"isGET": false,
					"isPOST": false,
					"summary": "disable - Disable a team",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Team id",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/teams/{id}/avatar",
					"methodName": "uploadAvatar",
					"method": "POST",
					"isGET": false,
					"isPOST": true,
					"summary": "Upload avatar",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/teams/{id}/avatar",
					"methodName": "downloadAvatar",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Get avatar",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/teams/{id}/avatar",
					"methodName": "removeAvatar",
					"method": "DELETE",
					"isGET": false,
					"isPOST": false,
					"summary": "Remove avatar",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/teams/{id}/roles",
					"methodName": "findRoles",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Query roles of Team.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "The id of the organization",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields, where, include, order, offset, and limit",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/teams/{id}/membership/{username}",
					"methodName": "checkMembershipForUser",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Check if a user is, publicly or privately, a member of the team.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "The id of the  team",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "username",
							"in": "path",
							"description": "The username to check",
							"required": true,
							"type": "string",
							"camelCaseName": "username",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/teams/{id}/memberships/{username}",
					"methodName": "getMembershipsForUser",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "In order to get a user's membership with an team, the authenticated user must be an team member.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "The id of the  team",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "username",
							"in": "path",
							"description": "The username",
							"required": true,
							"type": "string",
							"camelCaseName": "username",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/teams/{id}/memberships/{username}",
					"methodName": "addMembership",
					"method": "PUT",
					"isGET": false,
					"isPOST": false,
					"summary": "In order to create or update a user's membership with an team, the authenticated user must be an team owner.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "The id of the  team",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "username",
							"in": "path",
							"description": "The username",
							"required": true,
							"type": "string",
							"camelCaseName": "username",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "role",
							"in": "formData",
							"description": "The role name",
							"required": false,
							"type": "string",
							"camelCaseName": "role",
							"isFormParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/teams/{id}/memberships/{username}",
					"methodName": "removeMembership",
					"method": "DELETE",
					"isGET": false,
					"isPOST": false,
					"summary": "In order to remove a user's membership with an team, the authenticated user must be an team owner.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "The id of the  team",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "username",
							"in": "path",
							"description": "The username",
							"required": true,
							"type": "string",
							"camelCaseName": "username",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/teams/{id}/memberships",
					"methodName": "getMemberships",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "List all users who are members of an organization team, the authenticated user must be an team member.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "The id of the  team",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "where",
							"in": "query",
							"description": "The condition for query. default is all.\n - role: [\"admin\", \"member\", \"manager\", \"all\"]",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "where",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/teams/{id}/invitations",
					"methodName": "invitations",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "List pending team invitations",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "The id of the  team",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "filter",
							"in": "query",
							"description": "Filter for membership",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				}
			]
		},
		{
			"name": "Page",
			"serviceName": "Page",
			"version": "1.0.0",
			"methods": [
				{
					"path": "/pages/{id}/owner",
					"methodName": "prototype$__get__owner",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Fetches belongsTo relation owner.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Page id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "refresh",
							"in": "query",
							"required": false,
							"type": "boolean",
							"camelCaseName": "refresh",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/pages/{id}/repo",
					"methodName": "prototype$__get__repo",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Fetches belongsTo relation repo.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Page id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "refresh",
							"in": "query",
							"required": false,
							"type": "boolean",
							"camelCaseName": "refresh",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/pages",
					"methodName": "create",
					"method": "POST",
					"isGET": false,
					"isPOST": true,
					"summary": "create - Create a new instance of the model and persist it into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "data",
							"in": "body",
							"description": "Model instance data",
							"required": false,
							"schema": {
								"description": "Model instance data",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"orgId": {
										"type": "String",
										"name": "orgId",
										"camelCaseName": "orgId"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"type": {
										"type": "String",
										"name": "type",
										"camelCaseName": "type"
									},
									"description": {
										"type": "String",
										"name": "description",
										"camelCaseName": "description"
									},
									"items": {
										"type": "Object",
										"name": "items",
										"camelCaseName": "items"
									},
									"public": {
										"type": "Boolean",
										"name": "public",
										"camelCaseName": "public"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									},
									"repoId": {
										"type": "String",
										"name": "repoId",
										"camelCaseName": "repoId"
									}
								},
								"required": [
									"id",
									"name",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/pages",
					"methodName": "patchOrCreate",
					"method": "PATCH",
					"isGET": false,
					"isPOST": false,
					"summary": "patchOrCreate - Patch an existing model instance or insert a new one into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "data",
							"in": "body",
							"description": "Model instance data",
							"required": false,
							"schema": {
								"description": "Model instance data",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"orgId": {
										"type": "String",
										"name": "orgId",
										"camelCaseName": "orgId"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"type": {
										"type": "String",
										"name": "type",
										"camelCaseName": "type"
									},
									"description": {
										"type": "String",
										"name": "description",
										"camelCaseName": "description"
									},
									"items": {
										"type": "Object",
										"name": "items",
										"camelCaseName": "items"
									},
									"public": {
										"type": "Boolean",
										"name": "public",
										"camelCaseName": "public"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									},
									"repoId": {
										"type": "String",
										"name": "repoId",
										"camelCaseName": "repoId"
									}
								},
								"required": [
									"id",
									"name",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/pages",
					"methodName": "find",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "find - Find all instances of the model matched by filter from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields, where, include, order, offset, and limit",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/pages/{id}/exists",
					"methodName": "exists",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "exists - Check whether a model instance exists in the data source.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/pages/{id}",
					"methodName": "findById",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "findById - Find a model instance by {{id}} from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields and include",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/pages/{id}",
					"methodName": "deleteById",
					"method": "DELETE",
					"isGET": false,
					"isPOST": false,
					"summary": "deleteById - Delete a model instance by {{id}} from the data source.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/pages/{id}",
					"methodName": "prototype$patchAttributes",
					"method": "PATCH",
					"isGET": false,
					"isPOST": false,
					"summary": "patchAttributes - Patch attributes for a model instance and persist it into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Page id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"description": "An object of model property name/value pairs",
							"required": false,
							"schema": {
								"description": "An object of model property name/value pairs",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"orgId": {
										"type": "String",
										"name": "orgId",
										"camelCaseName": "orgId"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"type": {
										"type": "String",
										"name": "type",
										"camelCaseName": "type"
									},
									"description": {
										"type": "String",
										"name": "description",
										"camelCaseName": "description"
									},
									"items": {
										"type": "Object",
										"name": "items",
										"camelCaseName": "items"
									},
									"public": {
										"type": "Boolean",
										"name": "public",
										"camelCaseName": "public"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									},
									"repoId": {
										"type": "String",
										"name": "repoId",
										"camelCaseName": "repoId"
									}
								},
								"required": [
									"id",
									"name",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/pages/findOne",
					"methodName": "findOne",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "findOne - Find first instance of the model matched by filter from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields, where, include, order, offset, and limit",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/pages/count",
					"methodName": "count",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "count - Count instances of the model matched by where from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "where",
							"in": "query",
							"description": "Criteria to match model instances",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "where",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				}
			]
		},
		{
			"name": "Report",
			"serviceName": "Report",
			"version": "1.0.0",
			"methods": [
				{
					"path": "/reports/{id}/owner",
					"methodName": "prototype$__get__owner",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Fetches belongsTo relation owner.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Report id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "refresh",
							"in": "query",
							"required": false,
							"type": "boolean",
							"camelCaseName": "refresh",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/reports/{id}/repo",
					"methodName": "prototype$__get__repo",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Fetches belongsTo relation repo.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Report id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "refresh",
							"in": "query",
							"required": false,
							"type": "boolean",
							"camelCaseName": "refresh",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/reports",
					"methodName": "create",
					"method": "POST",
					"isGET": false,
					"isPOST": true,
					"summary": "create - Create a new instance of the model and persist it into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "data",
							"in": "body",
							"description": "Model instance data",
							"required": false,
							"schema": {
								"description": "Model instance data",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"title": {
										"type": "String",
										"name": "title",
										"camelCaseName": "title"
									},
									"description": {
										"type": "String",
										"name": "description",
										"camelCaseName": "description"
									},
									"scope": {
										"enum": [
											"org",
											"team",
											"account"
										],
										"type": "String",
										"name": "scope",
										"camelCaseName": "scope"
									},
									"type": {
										"type": "String",
										"name": "type",
										"camelCaseName": "type"
									},
									"subtype": {
										"type": "String",
										"name": "subtype",
										"camelCaseName": "subtype"
									},
									"properties": {
										"type": "Object",
										"name": "properties",
										"camelCaseName": "properties"
									},
									"query": {
										"properties": {},
										"name": "query",
										"camelCaseName": "query",
										"type": ""
									},
									"history": {
										"type": "Array",
										"items": {
											"properties": {},
											"name": "query",
											"camelCaseName": "query",
											"type": ""
										},
										"name": "history",
										"camelCaseName": "history"
									},
									"published": {
										"type": "String",
										"format": "date-time",
										"name": "published",
										"camelCaseName": "published"
									},
									"public": {
										"type": "Boolean",
										"name": "public",
										"camelCaseName": "public"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									},
									"repoId": {
										"type": "String",
										"name": "repoId",
										"camelCaseName": "repoId"
									}
								},
								"required": [
									"id",
									"name",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/reports",
					"methodName": "patchOrCreate",
					"method": "PATCH",
					"isGET": false,
					"isPOST": false,
					"summary": "patchOrCreate - Patch an existing model instance or insert a new one into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "data",
							"in": "body",
							"description": "Model instance data",
							"required": false,
							"schema": {
								"description": "Model instance data",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"title": {
										"type": "String",
										"name": "title",
										"camelCaseName": "title"
									},
									"description": {
										"type": "String",
										"name": "description",
										"camelCaseName": "description"
									},
									"scope": {
										"enum": [
											"org",
											"team",
											"account"
										],
										"type": "String",
										"name": "scope",
										"camelCaseName": "scope"
									},
									"type": {
										"type": "String",
										"name": "type",
										"camelCaseName": "type"
									},
									"subtype": {
										"type": "String",
										"name": "subtype",
										"camelCaseName": "subtype"
									},
									"properties": {
										"type": "Object",
										"name": "properties",
										"camelCaseName": "properties"
									},
									"query": {
										"properties": {},
										"name": "query",
										"camelCaseName": "query",
										"type": ""
									},
									"history": {
										"type": "Array",
										"items": {
											"properties": {},
											"name": "query",
											"camelCaseName": "query",
											"type": ""
										},
										"name": "history",
										"camelCaseName": "history"
									},
									"published": {
										"type": "String",
										"format": "date-time",
										"name": "published",
										"camelCaseName": "published"
									},
									"public": {
										"type": "Boolean",
										"name": "public",
										"camelCaseName": "public"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									},
									"repoId": {
										"type": "String",
										"name": "repoId",
										"camelCaseName": "repoId"
									}
								},
								"required": [
									"id",
									"name",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/reports",
					"methodName": "find",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "find - Find all instances of the model matched by filter from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields, where, include, order, offset, and limit",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/reports/{id}/exists",
					"methodName": "exists",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "exists - Check whether a model instance exists in the data source.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/reports/{id}",
					"methodName": "findById",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "findById - Find a model instance by {{id}} from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields and include",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/reports/{id}",
					"methodName": "deleteById",
					"method": "DELETE",
					"isGET": false,
					"isPOST": false,
					"summary": "deleteById - Delete a model instance by {{id}} from the data source.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/reports/{id}",
					"methodName": "prototype$patchAttributes",
					"method": "PATCH",
					"isGET": false,
					"isPOST": false,
					"summary": "patchAttributes - Patch attributes for a model instance and persist it into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Report id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"description": "An object of model property name/value pairs",
							"required": false,
							"schema": {
								"description": "An object of model property name/value pairs",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"title": {
										"type": "String",
										"name": "title",
										"camelCaseName": "title"
									},
									"description": {
										"type": "String",
										"name": "description",
										"camelCaseName": "description"
									},
									"scope": {
										"enum": [
											"org",
											"team",
											"account"
										],
										"type": "String",
										"name": "scope",
										"camelCaseName": "scope"
									},
									"type": {
										"type": "String",
										"name": "type",
										"camelCaseName": "type"
									},
									"subtype": {
										"type": "String",
										"name": "subtype",
										"camelCaseName": "subtype"
									},
									"properties": {
										"type": "Object",
										"name": "properties",
										"camelCaseName": "properties"
									},
									"query": {
										"properties": {},
										"name": "query",
										"camelCaseName": "query",
										"type": ""
									},
									"history": {
										"type": "Array",
										"items": {
											"properties": {},
											"name": "query",
											"camelCaseName": "query",
											"type": ""
										},
										"name": "history",
										"camelCaseName": "history"
									},
									"published": {
										"type": "String",
										"format": "date-time",
										"name": "published",
										"camelCaseName": "published"
									},
									"public": {
										"type": "Boolean",
										"name": "public",
										"camelCaseName": "public"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									},
									"repoId": {
										"type": "String",
										"name": "repoId",
										"camelCaseName": "repoId"
									}
								},
								"required": [
									"id",
									"name",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/reports/findOne",
					"methodName": "findOne",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "findOne - Find first instance of the model matched by filter from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields, where, include, order, offset, and limit",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/reports/count",
					"methodName": "count",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "count - Count instances of the model matched by where from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "where",
							"in": "query",
							"description": "Criteria to match model instances",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "where",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/reports/{id}/publish",
					"methodName": "publish",
					"method": "POST",
					"isGET": false,
					"isPOST": true,
					"summary": "publish - Publish a report",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Report id",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/reports/{id}/withdraw",
					"methodName": "withdraw",
					"method": "POST",
					"isGET": false,
					"isPOST": true,
					"summary": "withdraw - Withdraw a report form publishing",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Report id",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/reports/query",
					"methodName": "query",
					"method": "POST",
					"isGET": false,
					"isPOST": true,
					"summary": "query - Request for an aggregation query",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "query",
							"in": "body",
							"description": "Query object",
							"required": true,
							"schema": {
								"description": "Query object",
								"properties": {}
							},
							"camelCaseName": "query",
							"isBodyParameter": true,
							"cardinality": ""
						},
						{
							"name": "opts",
							"in": "query",
							"description": "Options for query includes: page",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "opts",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				}
			]
		},
		{
			"name": "Layer",
			"serviceName": "Layer",
			"version": "1.0.0",
			"methods": [
				{
					"path": "/layers/{id}/owner",
					"methodName": "prototype$__get__owner",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Fetches belongsTo relation owner.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Layer id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "refresh",
							"in": "query",
							"required": false,
							"type": "boolean",
							"camelCaseName": "refresh",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/layers/{id}/repo",
					"methodName": "prototype$__get__repo",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Fetches belongsTo relation repo.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Layer id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "refresh",
							"in": "query",
							"required": false,
							"type": "boolean",
							"camelCaseName": "refresh",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/layers",
					"methodName": "create",
					"method": "POST",
					"isGET": false,
					"isPOST": true,
					"summary": "create - Create a new instance of the model and persist it into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "data",
							"in": "body",
							"description": "Model instance data",
							"required": false,
							"schema": {
								"description": "Model instance data",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"description": {
										"type": "String",
										"name": "description",
										"camelCaseName": "description"
									},
									"status": {
										"default": "active",
										"type": "String",
										"name": "status",
										"camelCaseName": "status"
									},
									"fields": {
										"type": "Array",
										"items": {
											"type": "object"
										},
										"name": "fields",
										"camelCaseName": "fields"
									},
									"schema": {
										"type": "Object",
										"name": "schema",
										"camelCaseName": "schema"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									},
									"repoId": {
										"type": "String",
										"name": "repoId",
										"camelCaseName": "repoId"
									}
								},
								"required": [
									"id",
									"name",
									"status",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/layers",
					"methodName": "patchOrCreate",
					"method": "PATCH",
					"isGET": false,
					"isPOST": false,
					"summary": "patchOrCreate - Patch an existing model instance or insert a new one into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "data",
							"in": "body",
							"description": "Model instance data",
							"required": false,
							"schema": {
								"description": "Model instance data",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"description": {
										"type": "String",
										"name": "description",
										"camelCaseName": "description"
									},
									"status": {
										"default": "active",
										"type": "String",
										"name": "status",
										"camelCaseName": "status"
									},
									"fields": {
										"type": "Array",
										"items": {
											"type": "object"
										},
										"name": "fields",
										"camelCaseName": "fields"
									},
									"schema": {
										"type": "Object",
										"name": "schema",
										"camelCaseName": "schema"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									},
									"repoId": {
										"type": "String",
										"name": "repoId",
										"camelCaseName": "repoId"
									}
								},
								"required": [
									"id",
									"name",
									"status",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/layers",
					"methodName": "find",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "find - Find all instances of the model matched by filter from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields, where, include, order, offset, and limit",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/layers/{id}/exists",
					"methodName": "exists",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "exists - Check whether a model instance exists in the data source.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/layers/{id}",
					"methodName": "findById",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "findById - Find a model instance by {{id}} from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields and include",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/layers/{id}",
					"methodName": "deleteById",
					"method": "DELETE",
					"isGET": false,
					"isPOST": false,
					"summary": "deleteById - Delete a model instance by {{id}} from the data source.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/layers/{id}",
					"methodName": "prototype$patchAttributes",
					"method": "PATCH",
					"isGET": false,
					"isPOST": false,
					"summary": "patchAttributes - Patch attributes for a model instance and persist it into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Layer id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"description": "An object of model property name/value pairs",
							"required": false,
							"schema": {
								"description": "An object of model property name/value pairs",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"description": {
										"type": "String",
										"name": "description",
										"camelCaseName": "description"
									},
									"status": {
										"default": "active",
										"type": "String",
										"name": "status",
										"camelCaseName": "status"
									},
									"fields": {
										"type": "Array",
										"items": {
											"type": "object"
										},
										"name": "fields",
										"camelCaseName": "fields"
									},
									"schema": {
										"type": "Object",
										"name": "schema",
										"camelCaseName": "schema"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									},
									"repoId": {
										"type": "String",
										"name": "repoId",
										"camelCaseName": "repoId"
									}
								},
								"required": [
									"id",
									"name",
									"status",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/layers/findOne",
					"methodName": "findOne",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "findOne - Find first instance of the model matched by filter from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields, where, include, order, offset, and limit",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/layers/count",
					"methodName": "count",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "count - Count instances of the model matched by where from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "where",
							"in": "query",
							"description": "Criteria to match model instances",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "where",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/layers/{id}/fields",
					"methodName": "patchFields",
					"method": "PATCH",
					"isGET": false,
					"isPOST": false,
					"summary": "patchFields - Patch the fields of an existing layer",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "The id of the layer",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "fields",
							"in": "body",
							"description": "The schema of the layer",
							"required": true,
							"schema": {
								"description": "The schema of the layer",
								"type": "array",
								"items": {
									"properties": {
										"name": {
											"type": "String",
											"name": "name",
											"camelCaseName": "name"
										},
										"label": {
											"type": "String",
											"name": "label",
											"camelCaseName": "label"
										},
										"tags": {
											"type": "Array",
											"items": {
												"type": "string"
											},
											"name": "tags",
											"camelCaseName": "tags"
										},
										"type": {
											"type": "String",
											"name": "type",
											"camelCaseName": "type"
										},
										"format": {
											"type": "String",
											"name": "format",
											"camelCaseName": "format"
										},
										"lookup": {
											"properties": {},
											"name": "query",
											"camelCaseName": "query",
											"type": ""
										},
										"values": {
											"type": "Array",
											"items": {
												"type": "object"
											},
											"name": "values",
											"camelCaseName": "values"
										},
										"expression": {
											"type": "String",
											"name": "expression",
											"camelCaseName": "expression"
										},
										"resourceId": {
											"type": "String",
											"name": "resourceId",
											"camelCaseName": "resourceId"
										},
										"columnName": {
											"type": "String",
											"name": "columnName",
											"camelCaseName": "columnName"
										}
									},
									"required": [
										"name"
									],
									"additionalProperties": false
								}
							},
							"camelCaseName": "fields",
							"isBodyParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/layers/{id}/schema",
					"methodName": "patchSchema",
					"method": "PATCH",
					"isGET": false,
					"isPOST": false,
					"summary": "patchSchema - Patch the schema of an existing layer",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "The id of the layer",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "schema",
							"in": "body",
							"description": "The schema of the layer",
							"required": true,
							"schema": {
								"description": "The schema of the layer",
								"properties": {
									"resources": {
										"type": "Array",
										"items": {
											"properties": {
												"id": {
													"type": "String",
													"name": "id",
													"camelCaseName": "id"
												},
												"connectionId": {
													"type": "String",
													"name": "connectionId",
													"camelCaseName": "connectionId"
												},
												"name": {
													"type": "String",
													"name": "name",
													"camelCaseName": "name"
												},
												"label": {
													"type": "String",
													"name": "label",
													"camelCaseName": "label"
												},
												"columns": {
													"type": "Array",
													"items": {
														"properties": {
															"name": {
																"type": "String",
																"name": "name",
																"camelCaseName": "name"
															},
															"type": {
																"type": "String",
																"name": "type",
																"camelCaseName": "type"
															}
														},
														"required": [
															"name"
														],
														"additionalProperties": false
													},
													"name": "columns",
													"camelCaseName": "columns"
												}
											},
											"required": [
												"id"
											],
											"additionalProperties": false
										},
										"name": "resources",
										"camelCaseName": "resources"
									},
									"joins": {
										"type": "Array",
										"items": {
											"properties": {
												"id": {
													"type": "String",
													"name": "id",
													"camelCaseName": "id"
												},
												"connectionId": {
													"type": "String",
													"name": "connectionId",
													"camelCaseName": "connectionId"
												},
												"name": {
													"type": "String",
													"name": "name",
													"camelCaseName": "name"
												},
												"label": {
													"type": "String",
													"name": "label",
													"camelCaseName": "label"
												},
												"columns": {
													"type": "Array",
													"items": {
														"properties": {
															"name": {
																"type": "String",
																"name": "name",
																"camelCaseName": "name"
															},
															"type": {
																"type": "String",
																"name": "type",
																"camelCaseName": "type"
															}
														},
														"required": [
															"name"
														],
														"additionalProperties": false
													},
													"name": "columns",
													"camelCaseName": "columns"
												}
											},
											"required": [
												"id"
											],
											"additionalProperties": false
										},
										"name": "joins",
										"camelCaseName": "joins"
									},
									"id": {
										"type": "Number",
										"format": "double",
										"name": "id",
										"camelCaseName": "id"
									}
								},
								"additionalProperties": false
							},
							"camelCaseName": "schema",
							"isBodyParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				}
			]
		},
		{
			"name": "Connection",
			"serviceName": "Connection",
			"version": "1.0.0",
			"methods": [
				{
					"path": "/connections/{id}/owner",
					"methodName": "prototype$__get__owner",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Fetches belongsTo relation owner.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Connection id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "refresh",
							"in": "query",
							"required": false,
							"type": "boolean",
							"camelCaseName": "refresh",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/connections/{id}/repo",
					"methodName": "prototype$__get__repo",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Fetches belongsTo relation repo.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Connection id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "refresh",
							"in": "query",
							"required": false,
							"type": "boolean",
							"camelCaseName": "refresh",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/connections",
					"methodName": "create",
					"method": "POST",
					"isGET": false,
					"isPOST": true,
					"summary": "create - Create a new instance of the model and persist it into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "data",
							"in": "body",
							"description": "Model instance data",
							"required": false,
							"schema": {
								"description": "Model instance data",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"service": {
										"type": "String",
										"name": "service",
										"camelCaseName": "service"
									},
									"settings": {
										"type": "Object",
										"name": "settings",
										"camelCaseName": "settings"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									},
									"repoId": {
										"type": "String",
										"name": "repoId",
										"camelCaseName": "repoId"
									}
								},
								"required": [
									"id",
									"name",
									"service",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/connections",
					"methodName": "patchOrCreate",
					"method": "PATCH",
					"isGET": false,
					"isPOST": false,
					"summary": "patchOrCreate - Patch an existing model instance or insert a new one into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "data",
							"in": "body",
							"description": "Model instance data",
							"required": false,
							"schema": {
								"description": "Model instance data",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"service": {
										"type": "String",
										"name": "service",
										"camelCaseName": "service"
									},
									"settings": {
										"type": "Object",
										"name": "settings",
										"camelCaseName": "settings"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									},
									"repoId": {
										"type": "String",
										"name": "repoId",
										"camelCaseName": "repoId"
									}
								},
								"required": [
									"id",
									"name",
									"service",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/connections",
					"methodName": "find",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "find - Find all instances of the model matched by filter from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields, where, include, order, offset, and limit",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/connections/{id}/exists",
					"methodName": "exists",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "exists - Check whether a model instance exists in the data source.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/connections/{id}",
					"methodName": "findById",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "findById - Find a model instance by {{id}} from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields and include",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/connections/{id}",
					"methodName": "deleteById",
					"method": "DELETE",
					"isGET": false,
					"isPOST": false,
					"summary": "deleteById - Delete a model instance by {{id}} from the data source.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/connections/{id}",
					"methodName": "prototype$patchAttributes",
					"method": "PATCH",
					"isGET": false,
					"isPOST": false,
					"summary": "patchAttributes - Patch attributes for a model instance and persist it into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Connection id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"description": "An object of model property name/value pairs",
							"required": false,
							"schema": {
								"description": "An object of model property name/value pairs",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"service": {
										"type": "String",
										"name": "service",
										"camelCaseName": "service"
									},
									"settings": {
										"type": "Object",
										"name": "settings",
										"camelCaseName": "settings"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									},
									"repoId": {
										"type": "String",
										"name": "repoId",
										"camelCaseName": "repoId"
									}
								},
								"required": [
									"id",
									"name",
									"service",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/connections/{id}/replace",
					"methodName": "replaceById",
					"method": "POST",
					"isGET": false,
					"isPOST": true,
					"summary": "replaceById - Replace attributes for a model instance and persist it into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"description": "Model instance data",
							"required": false,
							"schema": {
								"description": "Model instance data",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"service": {
										"type": "String",
										"name": "service",
										"camelCaseName": "service"
									},
									"settings": {
										"type": "Object",
										"name": "settings",
										"camelCaseName": "settings"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									},
									"repoId": {
										"type": "String",
										"name": "repoId",
										"camelCaseName": "repoId"
									}
								},
								"required": [
									"id",
									"name",
									"service",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/connections/findOne",
					"methodName": "findOne",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "findOne - Find first instance of the model matched by filter from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields, where, include, order, offset, and limit",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/connections/count",
					"methodName": "count",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "count - Count instances of the model matched by where from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "where",
							"in": "query",
							"description": "Criteria to match model instances",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "where",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/connections/{id}/resources",
					"methodName": "discoverResources",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "discoverResources - Discover all resources from connection database or service",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "The id of the connection",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/connections/{id}/resources/{name}/schemas",
					"methodName": "discoverSchemas",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "discoverSchemas - Discover schemas for the resource of the connection",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "The id of the connection",
							"required": true,
							"type": "string",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "name",
							"in": "path",
							"description": "Resource name",
							"required": true,
							"type": "string",
							"camelCaseName": "name",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				}
			]
		},
		{
			"name": "Me",
			"serviceName": "Me",
			"version": "1.0.0",
			"methods": [
				{
					"path": "/me",
					"methodName": "currentUser",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Get current authenticated user",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/me/tokens",
					"methodName": "tokens",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Get all tokens",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/me/memberships/orgs",
					"methodName": "findOrgsMemberships",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "List your organization memberships.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "state",
							"in": "query",
							"description": "Filter by state. Could be pending or active",
							"required": false,
							"type": "string",
							"camelCaseName": "state",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/me/memberships/org/{org}",
					"methodName": "findOrgMembership",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Get your organization membership.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "org",
							"in": "path",
							"description": "The organization id",
							"required": true,
							"type": "string",
							"camelCaseName": "org",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/me/memberships/org/{org}",
					"methodName": "updateOrgMembership",
					"method": "PATCH",
					"isGET": false,
					"isPOST": false,
					"summary": "Update your organization membership.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "org",
							"in": "path",
							"description": "The organization id",
							"required": true,
							"type": "string",
							"camelCaseName": "org",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "state",
							"in": "formData",
							"description": " The state that the membership should be in. Only \"active\" will be accepted.",
							"required": false,
							"type": "string",
							"camelCaseName": "state",
							"isFormParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/me/teams",
					"methodName": "findTeams",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "List user teams.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/me/repos",
					"methodName": "findRepos",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "List user repositories.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields, where, include, order, offset, and limit",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/me/repos",
					"methodName": "createRepos",
					"method": "POST",
					"isGET": false,
					"isPOST": true,
					"summary": "Create repositories.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "data",
							"in": "formData",
							"description": "The repository data",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "data",
							"isFormParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				}
			]
		},
		{
			"name": "Repo",
			"serviceName": "Repo",
			"version": "1.0.0",
			"methods": [
				{
					"path": "/repos/{id}/owner",
					"methodName": "prototype$__get__owner",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Fetches belongsTo relation owner.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Repo id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "refresh",
							"in": "query",
							"required": false,
							"type": "boolean",
							"camelCaseName": "refresh",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}/connections/{fk}",
					"methodName": "prototype$__findById__connections",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Find a related item by id for connections.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Repo id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "fk",
							"in": "path",
							"description": "Foreign key for connections",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "fk",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}/connections/{fk}",
					"methodName": "prototype$__destroyById__connections",
					"method": "DELETE",
					"isGET": false,
					"isPOST": false,
					"summary": "Delete a related item by id for connections.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Repo id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "fk",
							"in": "path",
							"description": "Foreign key for connections",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "fk",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}/connections/{fk}",
					"methodName": "prototype$__updateById__connections",
					"method": "PUT",
					"isGET": false,
					"isPOST": false,
					"summary": "Update a related item by id for connections.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Repo id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "fk",
							"in": "path",
							"description": "Foreign key for connections",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "fk",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"required": false,
							"schema": {
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"service": {
										"type": "String",
										"name": "service",
										"camelCaseName": "service"
									},
									"settings": {
										"type": "Object",
										"name": "settings",
										"camelCaseName": "settings"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									},
									"repoId": {
										"type": "String",
										"name": "repoId",
										"camelCaseName": "repoId"
									}
								},
								"required": [
									"id",
									"name",
									"service",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}/layers/{fk}",
					"methodName": "prototype$__findById__layers",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Find a related item by id for layers.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Repo id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "fk",
							"in": "path",
							"description": "Foreign key for layers",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "fk",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}/layers/{fk}",
					"methodName": "prototype$__destroyById__layers",
					"method": "DELETE",
					"isGET": false,
					"isPOST": false,
					"summary": "Delete a related item by id for layers.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Repo id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "fk",
							"in": "path",
							"description": "Foreign key for layers",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "fk",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}/layers/{fk}",
					"methodName": "prototype$__updateById__layers",
					"method": "PUT",
					"isGET": false,
					"isPOST": false,
					"summary": "Update a related item by id for layers.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Repo id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "fk",
							"in": "path",
							"description": "Foreign key for layers",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "fk",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"required": false,
							"schema": {
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"description": {
										"type": "String",
										"name": "description",
										"camelCaseName": "description"
									},
									"status": {
										"default": "active",
										"type": "String",
										"name": "status",
										"camelCaseName": "status"
									},
									"fields": {
										"type": "Array",
										"items": {
											"type": "object"
										},
										"name": "fields",
										"camelCaseName": "fields"
									},
									"schema": {
										"type": "Object",
										"name": "schema",
										"camelCaseName": "schema"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									},
									"repoId": {
										"type": "String",
										"name": "repoId",
										"camelCaseName": "repoId"
									}
								},
								"required": [
									"id",
									"name",
									"status",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}/forms/{fk}",
					"methodName": "prototype$__findById__forms",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Find a related item by id for forms.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Repo id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "fk",
							"in": "path",
							"description": "Foreign key for forms",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "fk",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}/forms/{fk}",
					"methodName": "prototype$__destroyById__forms",
					"method": "DELETE",
					"isGET": false,
					"isPOST": false,
					"summary": "Delete a related item by id for forms.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Repo id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "fk",
							"in": "path",
							"description": "Foreign key for forms",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "fk",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}/forms/{fk}",
					"methodName": "prototype$__updateById__forms",
					"method": "PUT",
					"isGET": false,
					"isPOST": false,
					"summary": "Update a related item by id for forms.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Repo id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "fk",
							"in": "path",
							"description": "Foreign key for forms",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "fk",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"required": false,
							"schema": {
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"definition": {
										"type": "Object",
										"name": "definition",
										"camelCaseName": "definition"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									},
									"repoId": {
										"type": "String",
										"name": "repoId",
										"camelCaseName": "repoId"
									}
								},
								"required": [
									"id",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}/reports/{fk}",
					"methodName": "prototype$__findById__reports",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Find a related item by id for reports.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Repo id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "fk",
							"in": "path",
							"description": "Foreign key for reports",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "fk",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}/reports/{fk}",
					"methodName": "prototype$__destroyById__reports",
					"method": "DELETE",
					"isGET": false,
					"isPOST": false,
					"summary": "Delete a related item by id for reports.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Repo id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "fk",
							"in": "path",
							"description": "Foreign key for reports",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "fk",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}/reports/{fk}",
					"methodName": "prototype$__updateById__reports",
					"method": "PUT",
					"isGET": false,
					"isPOST": false,
					"summary": "Update a related item by id for reports.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Repo id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "fk",
							"in": "path",
							"description": "Foreign key for reports",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "fk",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"required": false,
							"schema": {
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"title": {
										"type": "String",
										"name": "title",
										"camelCaseName": "title"
									},
									"description": {
										"type": "String",
										"name": "description",
										"camelCaseName": "description"
									},
									"scope": {
										"enum": [
											"org",
											"team",
											"account"
										],
										"type": "String",
										"name": "scope",
										"camelCaseName": "scope"
									},
									"type": {
										"type": "String",
										"name": "type",
										"camelCaseName": "type"
									},
									"subtype": {
										"type": "String",
										"name": "subtype",
										"camelCaseName": "subtype"
									},
									"properties": {
										"type": "Object",
										"name": "properties",
										"camelCaseName": "properties"
									},
									"query": {
										"properties": {},
										"name": "query",
										"camelCaseName": "query",
										"type": ""
									},
									"history": {
										"type": "Array",
										"items": {
											"properties": {},
											"name": "query",
											"camelCaseName": "query",
											"type": ""
										},
										"name": "history",
										"camelCaseName": "history"
									},
									"published": {
										"type": "String",
										"format": "date-time",
										"name": "published",
										"camelCaseName": "published"
									},
									"public": {
										"type": "Boolean",
										"name": "public",
										"camelCaseName": "public"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									},
									"repoId": {
										"type": "String",
										"name": "repoId",
										"camelCaseName": "repoId"
									}
								},
								"required": [
									"id",
									"name",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}/connections",
					"methodName": "prototype$__get__connections",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Queries connections of Repo.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Repo id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "filter",
							"in": "query",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}/connections",
					"methodName": "prototype$__create__connections",
					"method": "POST",
					"isGET": false,
					"isPOST": true,
					"summary": "Creates a new instance in connections of this model.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Repo id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"required": false,
							"schema": {
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"service": {
										"type": "String",
										"name": "service",
										"camelCaseName": "service"
									},
									"settings": {
										"type": "Object",
										"name": "settings",
										"camelCaseName": "settings"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									},
									"repoId": {
										"type": "String",
										"name": "repoId",
										"camelCaseName": "repoId"
									}
								},
								"required": [
									"id",
									"name",
									"service",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}/connections",
					"methodName": "prototype$__delete__connections",
					"method": "DELETE",
					"isGET": false,
					"isPOST": false,
					"summary": "Deletes all connections of this model.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Repo id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}/connections/count",
					"methodName": "prototype$__count__connections",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Counts connections of Repo.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Repo id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "where",
							"in": "query",
							"description": "Criteria to match model instances",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "where",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}/layers",
					"methodName": "prototype$__get__layers",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Queries layers of Repo.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Repo id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "filter",
							"in": "query",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}/layers",
					"methodName": "prototype$__create__layers",
					"method": "POST",
					"isGET": false,
					"isPOST": true,
					"summary": "Creates a new instance in layers of this model.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Repo id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"required": false,
							"schema": {
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"description": {
										"type": "String",
										"name": "description",
										"camelCaseName": "description"
									},
									"status": {
										"default": "active",
										"type": "String",
										"name": "status",
										"camelCaseName": "status"
									},
									"fields": {
										"type": "Array",
										"items": {
											"type": "object"
										},
										"name": "fields",
										"camelCaseName": "fields"
									},
									"schema": {
										"type": "Object",
										"name": "schema",
										"camelCaseName": "schema"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									},
									"repoId": {
										"type": "String",
										"name": "repoId",
										"camelCaseName": "repoId"
									}
								},
								"required": [
									"id",
									"name",
									"status",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}/layers",
					"methodName": "prototype$__delete__layers",
					"method": "DELETE",
					"isGET": false,
					"isPOST": false,
					"summary": "Deletes all layers of this model.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Repo id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}/layers/count",
					"methodName": "prototype$__count__layers",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Counts layers of Repo.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Repo id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "where",
							"in": "query",
							"description": "Criteria to match model instances",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "where",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}/forms",
					"methodName": "prototype$__get__forms",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Queries forms of Repo.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Repo id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "filter",
							"in": "query",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}/forms",
					"methodName": "prototype$__create__forms",
					"method": "POST",
					"isGET": false,
					"isPOST": true,
					"summary": "Creates a new instance in forms of this model.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Repo id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"required": false,
							"schema": {
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"definition": {
										"type": "Object",
										"name": "definition",
										"camelCaseName": "definition"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									},
									"repoId": {
										"type": "String",
										"name": "repoId",
										"camelCaseName": "repoId"
									}
								},
								"required": [
									"id",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}/forms",
					"methodName": "prototype$__delete__forms",
					"method": "DELETE",
					"isGET": false,
					"isPOST": false,
					"summary": "Deletes all forms of this model.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Repo id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}/forms/count",
					"methodName": "prototype$__count__forms",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Counts forms of Repo.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Repo id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "where",
							"in": "query",
							"description": "Criteria to match model instances",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "where",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}/reports",
					"methodName": "prototype$__get__reports",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Queries reports of Repo.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Repo id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "filter",
							"in": "query",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}/reports",
					"methodName": "prototype$__create__reports",
					"method": "POST",
					"isGET": false,
					"isPOST": true,
					"summary": "Creates a new instance in reports of this model.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Repo id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"required": false,
							"schema": {
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"title": {
										"type": "String",
										"name": "title",
										"camelCaseName": "title"
									},
									"description": {
										"type": "String",
										"name": "description",
										"camelCaseName": "description"
									},
									"scope": {
										"enum": [
											"org",
											"team",
											"account"
										],
										"type": "String",
										"name": "scope",
										"camelCaseName": "scope"
									},
									"type": {
										"type": "String",
										"name": "type",
										"camelCaseName": "type"
									},
									"subtype": {
										"type": "String",
										"name": "subtype",
										"camelCaseName": "subtype"
									},
									"properties": {
										"type": "Object",
										"name": "properties",
										"camelCaseName": "properties"
									},
									"query": {
										"properties": {},
										"name": "query",
										"camelCaseName": "query",
										"type": ""
									},
									"history": {
										"type": "Array",
										"items": {
											"properties": {},
											"name": "query",
											"camelCaseName": "query",
											"type": ""
										},
										"name": "history",
										"camelCaseName": "history"
									},
									"published": {
										"type": "String",
										"format": "date-time",
										"name": "published",
										"camelCaseName": "published"
									},
									"public": {
										"type": "Boolean",
										"name": "public",
										"camelCaseName": "public"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									},
									"repoId": {
										"type": "String",
										"name": "repoId",
										"camelCaseName": "repoId"
									}
								},
								"required": [
									"id",
									"name",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}/reports",
					"methodName": "prototype$__delete__reports",
					"method": "DELETE",
					"isGET": false,
					"isPOST": false,
					"summary": "Deletes all reports of this model.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Repo id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}/reports/count",
					"methodName": "prototype$__count__reports",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Counts reports of Repo.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Repo id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "where",
							"in": "query",
							"description": "Criteria to match model instances",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "where",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos",
					"methodName": "patchOrCreate",
					"method": "PATCH",
					"isGET": false,
					"isPOST": false,
					"summary": "Patch an existing model instance or insert a new one into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "data",
							"in": "body",
							"description": "Model instance data",
							"required": false,
							"schema": {
								"description": "Model instance data",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"description": {
										"type": "String",
										"name": "description",
										"camelCaseName": "description"
									},
									"private": {
										"default": true,
										"type": "Boolean",
										"name": "private",
										"camelCaseName": "private"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									}
								},
								"required": [
									"id",
									"name",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos",
					"methodName": "find",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Find all instances of the model matched by filter from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields, where, include, order, offset, and limit",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}/exists",
					"methodName": "exists__get_repos__id__exists",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Check whether a model instance exists in the data source.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}",
					"methodName": "exists__head_repos__id_",
					"method": "HEAD",
					"isGET": false,
					"isPOST": false,
					"summary": "Check whether a model instance exists in the data source.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}",
					"methodName": "findById",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Find a model instance by {{id}} from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields and include",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}",
					"methodName": "replaceById__put_repos__id_",
					"method": "PUT",
					"isGET": false,
					"isPOST": false,
					"summary": "Replace attributes for a model instance and persist it into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"description": "Model instance data",
							"required": false,
							"schema": {
								"description": "Model instance data",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"description": {
										"type": "String",
										"name": "description",
										"camelCaseName": "description"
									},
									"private": {
										"default": true,
										"type": "Boolean",
										"name": "private",
										"camelCaseName": "private"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									}
								},
								"required": [
									"id",
									"name",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}",
					"methodName": "deleteById",
					"method": "DELETE",
					"isGET": false,
					"isPOST": false,
					"summary": "Delete a model instance by {{id}} from the data source.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}",
					"methodName": "prototype$patchAttributes",
					"method": "PATCH",
					"isGET": false,
					"isPOST": false,
					"summary": "Patch attributes for a model instance and persist it into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Repo id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"description": "An object of model property name/value pairs",
							"required": false,
							"schema": {
								"description": "An object of model property name/value pairs",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"description": {
										"type": "String",
										"name": "description",
										"camelCaseName": "description"
									},
									"private": {
										"default": true,
										"type": "Boolean",
										"name": "private",
										"camelCaseName": "private"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									}
								},
								"required": [
									"id",
									"name",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{id}/replace",
					"methodName": "replaceById__post_repos__id__replace",
					"method": "POST",
					"isGET": false,
					"isPOST": true,
					"summary": "Replace attributes for a model instance and persist it into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"description": "Model instance data",
							"required": false,
							"schema": {
								"description": "Model instance data",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"description": {
										"type": "String",
										"name": "description",
										"camelCaseName": "description"
									},
									"private": {
										"default": true,
										"type": "Boolean",
										"name": "private",
										"camelCaseName": "private"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									}
								},
								"required": [
									"id",
									"name",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/findOne",
					"methodName": "findOne",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Find first instance of the model matched by filter from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields, where, include, order, offset, and limit",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/count",
					"methodName": "count",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Count instances of the model matched by where from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "where",
							"in": "query",
							"description": "Criteria to match model instances",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "where",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{owner}/{repo}",
					"methodName": "get",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Get a repository",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "owner",
							"in": "path",
							"description": "Owner id or name",
							"required": true,
							"type": "string",
							"camelCaseName": "owner",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "repo",
							"in": "path",
							"description": "Repository id or name",
							"required": true,
							"type": "string",
							"camelCaseName": "repo",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{owner}/{repo}",
					"methodName": "edit",
					"method": "PATCH",
					"isGET": false,
					"isPOST": false,
					"summary": "Update a repository",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "owner",
							"in": "path",
							"description": "Owner id or name",
							"required": true,
							"type": "string",
							"camelCaseName": "owner",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "repo",
							"in": "path",
							"description": "Repository id or name",
							"required": true,
							"type": "string",
							"camelCaseName": "repo",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "formData",
							"description": "Repository properties",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "data",
							"isFormParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/repos/{owner}/{repo}",
					"methodName": "delete",
					"method": "DELETE",
					"isGET": false,
					"isPOST": false,
					"summary": "Delete a repository",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "owner",
							"in": "path",
							"description": "Owner id or name",
							"required": true,
							"type": "string",
							"camelCaseName": "owner",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "repo",
							"in": "path",
							"description": "Repository id or name",
							"required": true,
							"type": "string",
							"camelCaseName": "repo",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				}
			]
		},
		{
			"name": "Namespace",
			"serviceName": "Namespace",
			"version": "1.0.0",
			"methods": [
				{
					"path": "/Namespaces/{id}/owner",
					"methodName": "prototype$__get__owner",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Fetches belongsTo relation owner.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Namespace id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "refresh",
							"in": "query",
							"required": false,
							"type": "boolean",
							"camelCaseName": "refresh",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/Namespaces",
					"methodName": "patchOrCreate",
					"method": "PATCH",
					"isGET": false,
					"isPOST": false,
					"summary": "Patch an existing model instance or insert a new one into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "data",
							"in": "body",
							"description": "Model instance data",
							"required": false,
							"schema": {
								"description": "Model instance data",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"description": {
										"default": "",
										"type": "String",
										"name": "description",
										"camelCaseName": "description"
									},
									"avatar": {
										"type": "String",
										"name": "avatar",
										"camelCaseName": "avatar"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									}
								},
								"required": [
									"id",
									"name",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/Namespaces",
					"methodName": "find",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Find all instances of the model matched by filter from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields, where, include, order, offset, and limit",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/Namespaces/{id}/exists",
					"methodName": "exists__get_Namespaces__id__exists",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Check whether a model instance exists in the data source.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/Namespaces/{id}",
					"methodName": "exists__head_Namespaces__id_",
					"method": "HEAD",
					"isGET": false,
					"isPOST": false,
					"summary": "Check whether a model instance exists in the data source.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/Namespaces/{id}",
					"methodName": "findById",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Find a model instance by {{id}} from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields and include",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/Namespaces/{id}",
					"methodName": "deleteById",
					"method": "DELETE",
					"isGET": false,
					"isPOST": false,
					"summary": "Delete a model instance by {{id}} from the data source.",
					"isSecure": false,
					"hasOptionalParameter": false,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Model id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/Namespaces/{id}",
					"methodName": "prototype$patchAttributes",
					"method": "PATCH",
					"isGET": false,
					"isPOST": false,
					"summary": "Patch attributes for a model instance and persist it into the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "id",
							"in": "path",
							"description": "Namespace id",
							"required": true,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "id",
							"isPathParameter": true,
							"cardinality": ""
						},
						{
							"name": "data",
							"in": "body",
							"description": "An object of model property name/value pairs",
							"required": false,
							"schema": {
								"description": "An object of model property name/value pairs",
								"properties": {
									"id": {
										"type": "String",
										"name": "id",
										"camelCaseName": "id"
									},
									"name": {
										"type": "String",
										"name": "name",
										"camelCaseName": "name"
									},
									"description": {
										"default": "",
										"type": "String",
										"name": "description",
										"camelCaseName": "description"
									},
									"avatar": {
										"type": "String",
										"name": "avatar",
										"camelCaseName": "avatar"
									},
									"ownerId": {
										"type": "String",
										"name": "ownerId",
										"camelCaseName": "ownerId"
									},
									"ownerType": {
										"type": "String",
										"name": "ownerType",
										"camelCaseName": "ownerType"
									},
									"createdAt": {
										"type": "String",
										"format": "date-time",
										"name": "createdAt",
										"camelCaseName": "createdAt"
									},
									"updatedAt": {
										"type": "String",
										"format": "date-time",
										"name": "updatedAt",
										"camelCaseName": "updatedAt"
									}
								},
								"required": [
									"id",
									"name",
									"createdAt",
									"updatedAt"
								],
								"additionalProperties": false
							},
							"camelCaseName": "data",
							"isBodyParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/Namespaces/findOne",
					"methodName": "findOne",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Find first instance of the model matched by filter from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "filter",
							"in": "query",
							"description": "Filter defining fields, where, include, order, offset, and limit",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "filter",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				},
				{
					"path": "/Namespaces/count",
					"methodName": "count",
					"method": "GET",
					"isGET": true,
					"isPOST": false,
					"summary": "Count instances of the model matched by where from the data source.",
					"isSecure": false,
					"hasOptionalParameter": true,
					"parameters": [
						{
							"name": "where",
							"in": "query",
							"description": "Criteria to match model instances",
							"required": false,
							"type": "string",
							"format": "JSON",
							"camelCaseName": "where",
							"isQueryParameter": true,
							"cardinality": "?"
						}
					],
					"headers": [
						[],
						{
							"name": "Content-Type",
							"value": "'application/json,application/x-www-form-urlencoded,application/xml,text/xml'"
						}
					],
					"accepts": [
						"application/json"
					],
					"contentTypes": [
						"application/json",
						"application/x-www-form-urlencoded",
						"application/xml",
						"text/xml"
					]
				}
			]
		}
	],
	"models": [
		{
			"properties": [
				{
					"type": "String",
					"name": "id",
					"camelCaseName": "id"
				},
				{
					"default": 1209600,
					"description": "time to live in seconds (2 weeks by default)",
					"type": "Number",
					"format": "double",
					"name": "ttl",
					"camelCaseName": "ttl"
				},
				{
					"type": "String",
					"format": "date-time",
					"name": "created",
					"camelCaseName": "created"
				},
				{
					"type": "String",
					"name": "userId",
					"camelCaseName": "userId"
				}
			],
			"required": [
				"id"
			],
			"additionalProperties": false,
			"name": "AccessToken",
			"modelName": "AccessToken",
			"version": "1.0.0"
		},
		{
			"properties": [
				{
					"type": "String",
					"name": "id",
					"camelCaseName": "id"
				},
				{
					"type": "String",
					"name": "name",
					"camelCaseName": "name"
				},
				{
					"type": "String",
					"name": "description",
					"camelCaseName": "description"
				},
				{
					"default": true,
					"type": "Boolean",
					"name": "private",
					"camelCaseName": "private"
				},
				{
					"type": "String",
					"name": "ownerId",
					"camelCaseName": "ownerId"
				},
				{
					"type": "String",
					"name": "ownerType",
					"camelCaseName": "ownerType"
				},
				{
					"type": "String",
					"format": "date-time",
					"name": "createdAt",
					"camelCaseName": "createdAt"
				},
				{
					"type": "String",
					"format": "date-time",
					"name": "updatedAt",
					"camelCaseName": "updatedAt"
				}
			],
			"required": [
				"id",
				"name",
				"createdAt",
				"updatedAt"
			],
			"additionalProperties": false,
			"name": "Repo",
			"modelName": "Repo",
			"version": "1.0.0"
		},
		{
			"properties": [
				{
					"type": "String",
					"name": "id",
					"camelCaseName": "id"
				},
				{
					"type": "String",
					"name": "name",
					"camelCaseName": "name"
				},
				{
					"default": "",
					"type": "String",
					"name": "description",
					"camelCaseName": "description"
				},
				{
					"type": "String",
					"name": "avatar",
					"camelCaseName": "avatar"
				},
				{
					"type": "String",
					"name": "ownerId",
					"camelCaseName": "ownerId"
				},
				{
					"type": "String",
					"name": "ownerType",
					"camelCaseName": "ownerType"
				},
				{
					"type": "String",
					"format": "date-time",
					"name": "createdAt",
					"camelCaseName": "createdAt"
				},
				{
					"type": "String",
					"format": "date-time",
					"name": "updatedAt",
					"camelCaseName": "updatedAt"
				}
			],
			"required": [
				"id",
				"name",
				"createdAt",
				"updatedAt"
			],
			"additionalProperties": false,
			"name": "Namespace",
			"modelName": "Namespace",
			"version": "1.0.0"
		},
		{
			"properties": [
				{
					"type": "String",
					"name": "id",
					"camelCaseName": "id"
				},
				{
					"type": "String",
					"name": "username",
					"camelCaseName": "username"
				},
				{
					"type": "String",
					"name": "email",
					"camelCaseName": "email"
				},
				{
					"type": "String",
					"name": "mobile",
					"camelCaseName": "mobile"
				},
				{
					"type": "String",
					"name": "fullname",
					"camelCaseName": "fullname"
				},
				{
					"type": "String",
					"name": "gender",
					"camelCaseName": "gender"
				},
				{
					"type": "String",
					"format": "date-time",
					"name": "birthday",
					"camelCaseName": "birthday"
				},
				{
					"type": "Object",
					"name": "profile",
					"camelCaseName": "profile"
				},
				{
					"default": true,
					"type": "Boolean",
					"name": "enabled",
					"camelCaseName": "enabled"
				},
				{
					"type": "String",
					"name": "realm",
					"camelCaseName": "realm"
				},
				{
					"type": "Boolean",
					"name": "emailVerified",
					"camelCaseName": "emailVerified"
				},
				{
					"type": "String",
					"name": "avatar",
					"camelCaseName": "avatar"
				}
			],
			"required": [
				"id"
			],
			"additionalProperties": false,
			"name": "Account",
			"modelName": "Account",
			"version": "1.0.0"
		},
		{
			"properties": [
				{
					"type": "String",
					"name": "id",
					"camelCaseName": "id"
				},
				{
					"type": "String",
					"name": "name",
					"camelCaseName": "name"
				},
				{
					"type": "String",
					"name": "orgId",
					"camelCaseName": "orgId"
				},
				{
					"default": true,
					"type": "Boolean",
					"name": "enabled",
					"camelCaseName": "enabled"
				},
				{
					"type": "String",
					"name": "avatar",
					"camelCaseName": "avatar"
				},
				{
					"type": "String",
					"format": "date-time",
					"name": "createdAt",
					"camelCaseName": "createdAt"
				},
				{
					"type": "String",
					"format": "date-time",
					"name": "updatedAt",
					"camelCaseName": "updatedAt"
				}
			],
			"required": [
				"id",
				"name",
				"orgId",
				"createdAt",
				"updatedAt"
			],
			"additionalProperties": false,
			"name": "Team",
			"modelName": "Team",
			"version": "1.0.0"
		},
		{
			"properties": [
				{
					"type": "String",
					"name": "id",
					"camelCaseName": "id"
				},
				{
					"type": "String",
					"name": "name",
					"camelCaseName": "name"
				},
				{
					"default": true,
					"type": "Boolean",
					"name": "enabled",
					"camelCaseName": "enabled"
				},
				{
					"type": "String",
					"name": "avatar",
					"camelCaseName": "avatar"
				},
				{
					"type": "String",
					"format": "date-time",
					"name": "createdAt",
					"camelCaseName": "createdAt"
				},
				{
					"type": "String",
					"format": "date-time",
					"name": "updatedAt",
					"camelCaseName": "updatedAt"
				}
			],
			"required": [
				"id",
				"name",
				"createdAt",
				"updatedAt"
			],
			"additionalProperties": false,
			"name": "Org",
			"modelName": "Org",
			"version": "1.0.0"
		},
		{
			"properties": [
				{
					"type": "Number",
					"format": "double",
					"name": "id",
					"camelCaseName": "id"
				}
			],
			"additionalProperties": false,
			"name": "PersistedModel",
			"modelName": "PersistedModel",
			"version": "1.0.0"
		},
		{
			"properties": [
				{
					"type": "String",
					"name": "id",
					"camelCaseName": "id"
				},
				{
					"type": "String",
					"name": "name",
					"camelCaseName": "name"
				},
				{
					"type": "Object",
					"name": "definition",
					"camelCaseName": "definition"
				},
				{
					"type": "String",
					"name": "ownerId",
					"camelCaseName": "ownerId"
				},
				{
					"type": "String",
					"name": "ownerType",
					"camelCaseName": "ownerType"
				},
				{
					"type": "String",
					"format": "date-time",
					"name": "createdAt",
					"camelCaseName": "createdAt"
				},
				{
					"type": "String",
					"format": "date-time",
					"name": "updatedAt",
					"camelCaseName": "updatedAt"
				},
				{
					"type": "String",
					"name": "repoId",
					"camelCaseName": "repoId"
				}
			],
			"required": [
				"id",
				"createdAt",
				"updatedAt"
			],
			"additionalProperties": false,
			"name": "Form",
			"modelName": "Form",
			"version": "1.0.0"
		},
		{
			"properties": [
				{
					"type": "String",
					"name": "id",
					"camelCaseName": "id"
				},
				{
					"type": "String",
					"name": "orgId",
					"camelCaseName": "orgId"
				},
				{
					"type": "String",
					"name": "name",
					"camelCaseName": "name"
				},
				{
					"type": "String",
					"name": "type",
					"camelCaseName": "type"
				},
				{
					"type": "String",
					"name": "description",
					"camelCaseName": "description"
				},
				{
					"type": "Object",
					"name": "items",
					"camelCaseName": "items"
				},
				{
					"type": "Boolean",
					"name": "public",
					"camelCaseName": "public"
				},
				{
					"type": "String",
					"name": "ownerId",
					"camelCaseName": "ownerId"
				},
				{
					"type": "String",
					"name": "ownerType",
					"camelCaseName": "ownerType"
				},
				{
					"type": "String",
					"format": "date-time",
					"name": "createdAt",
					"camelCaseName": "createdAt"
				},
				{
					"type": "String",
					"format": "date-time",
					"name": "updatedAt",
					"camelCaseName": "updatedAt"
				},
				{
					"type": "String",
					"name": "repoId",
					"camelCaseName": "repoId"
				}
			],
			"required": [
				"id",
				"name",
				"createdAt",
				"updatedAt"
			],
			"additionalProperties": false,
			"name": "Page",
			"modelName": "Page",
			"version": "1.0.0"
		},
		{
			"properties": [
				{
					"type": "String",
					"name": "id",
					"camelCaseName": "id"
				},
				{
					"type": "String",
					"name": "name",
					"camelCaseName": "name"
				},
				{
					"type": "String",
					"name": "title",
					"camelCaseName": "title"
				},
				{
					"type": "String",
					"name": "description",
					"camelCaseName": "description"
				},
				{
					"enum": [
						"org",
						"team",
						"account"
					],
					"type": "String",
					"name": "scope",
					"camelCaseName": "scope"
				},
				{
					"type": "String",
					"name": "type",
					"camelCaseName": "type"
				},
				{
					"type": "String",
					"name": "subtype",
					"camelCaseName": "subtype"
				},
				{
					"type": "Object",
					"name": "properties",
					"camelCaseName": "properties"
				},
				{
					"properties": {},
					"name": "query",
					"camelCaseName": "query",
					"type": ""
				},
				{
					"type": "Array",
					"items": {
						"properties": {},
						"name": "query",
						"camelCaseName": "query",
						"type": ""
					},
					"name": "history",
					"camelCaseName": "history"
				},
				{
					"type": "String",
					"format": "date-time",
					"name": "published",
					"camelCaseName": "published"
				},
				{
					"type": "Boolean",
					"name": "public",
					"camelCaseName": "public"
				},
				{
					"type": "String",
					"name": "ownerId",
					"camelCaseName": "ownerId"
				},
				{
					"type": "String",
					"name": "ownerType",
					"camelCaseName": "ownerType"
				},
				{
					"type": "String",
					"format": "date-time",
					"name": "createdAt",
					"camelCaseName": "createdAt"
				},
				{
					"type": "String",
					"format": "date-time",
					"name": "updatedAt",
					"camelCaseName": "updatedAt"
				},
				{
					"type": "String",
					"name": "repoId",
					"camelCaseName": "repoId"
				}
			],
			"required": [
				"id",
				"name",
				"createdAt",
				"updatedAt"
			],
			"additionalProperties": false,
			"name": "Report",
			"modelName": "Report",
			"version": "1.0.0"
		},
		{
			"properties": [
				{
					"type": "String",
					"name": "id",
					"camelCaseName": "id"
				},
				{
					"type": "String",
					"name": "name",
					"camelCaseName": "name"
				},
				{
					"type": "String",
					"name": "description",
					"camelCaseName": "description"
				},
				{
					"default": "active",
					"type": "String",
					"name": "status",
					"camelCaseName": "status"
				},
				{
					"type": "Array",
					"items": {
						"type": "object"
					},
					"name": "fields",
					"camelCaseName": "fields"
				},
				{
					"type": "Object",
					"name": "schema",
					"camelCaseName": "schema"
				},
				{
					"type": "String",
					"name": "ownerId",
					"camelCaseName": "ownerId"
				},
				{
					"type": "String",
					"name": "ownerType",
					"camelCaseName": "ownerType"
				},
				{
					"type": "String",
					"format": "date-time",
					"name": "createdAt",
					"camelCaseName": "createdAt"
				},
				{
					"type": "String",
					"format": "date-time",
					"name": "updatedAt",
					"camelCaseName": "updatedAt"
				},
				{
					"type": "String",
					"name": "repoId",
					"camelCaseName": "repoId"
				}
			],
			"required": [
				"id",
				"name",
				"status",
				"createdAt",
				"updatedAt"
			],
			"additionalProperties": false,
			"name": "Layer",
			"modelName": "Layer",
			"version": "1.0.0"
		},
		{
			"properties": [
				{
					"type": "String",
					"name": "name",
					"camelCaseName": "name"
				},
				{
					"type": "String",
					"name": "label",
					"camelCaseName": "label"
				},
				{
					"type": "Array",
					"items": {
						"type": "string"
					},
					"name": "tags",
					"camelCaseName": "tags"
				},
				{
					"type": "String",
					"name": "type",
					"camelCaseName": "type"
				},
				{
					"type": "String",
					"name": "format",
					"camelCaseName": "format"
				},
				{
					"properties": {},
					"name": "query",
					"camelCaseName": "query",
					"type": ""
				},
				{
					"type": "Array",
					"items": {
						"type": "object"
					},
					"name": "values",
					"camelCaseName": "values"
				},
				{
					"type": "String",
					"name": "expression",
					"camelCaseName": "expression"
				},
				{
					"type": "String",
					"name": "resourceId",
					"camelCaseName": "resourceId"
				},
				{
					"type": "String",
					"name": "columnName",
					"camelCaseName": "columnName"
				}
			],
			"required": [
				"name"
			],
			"additionalProperties": false,
			"name": "LayerField",
			"modelName": "LayerField",
			"version": "1.0.0"
		},
		{
			"properties": [
				{
					"type": "Array",
					"items": {
						"properties": {
							"id": {
								"type": "String",
								"name": "id",
								"camelCaseName": "id"
							},
							"connectionId": {
								"type": "String",
								"name": "connectionId",
								"camelCaseName": "connectionId"
							},
							"name": {
								"type": "String",
								"name": "name",
								"camelCaseName": "name"
							},
							"label": {
								"type": "String",
								"name": "label",
								"camelCaseName": "label"
							},
							"columns": {
								"type": "Array",
								"items": {
									"properties": {
										"name": {
											"type": "String",
											"name": "name",
											"camelCaseName": "name"
										},
										"type": {
											"type": "String",
											"name": "type",
											"camelCaseName": "type"
										}
									},
									"required": [
										"name"
									],
									"additionalProperties": false
								},
								"name": "columns",
								"camelCaseName": "columns"
							}
						},
						"required": [
							"id"
						],
						"additionalProperties": false
					},
					"name": "resources",
					"camelCaseName": "resources"
				},
				{
					"type": "Array",
					"items": {
						"properties": {
							"id": {
								"type": "String",
								"name": "id",
								"camelCaseName": "id"
							},
							"connectionId": {
								"type": "String",
								"name": "connectionId",
								"camelCaseName": "connectionId"
							},
							"name": {
								"type": "String",
								"name": "name",
								"camelCaseName": "name"
							},
							"label": {
								"type": "String",
								"name": "label",
								"camelCaseName": "label"
							},
							"columns": {
								"type": "Array",
								"items": {
									"properties": {
										"name": {
											"type": "String",
											"name": "name",
											"camelCaseName": "name"
										},
										"type": {
											"type": "String",
											"name": "type",
											"camelCaseName": "type"
										}
									},
									"required": [
										"name"
									],
									"additionalProperties": false
								},
								"name": "columns",
								"camelCaseName": "columns"
							}
						},
						"required": [
							"id"
						],
						"additionalProperties": false
					},
					"name": "joins",
					"camelCaseName": "joins"
				},
				{
					"type": "Number",
					"format": "double",
					"name": "id",
					"camelCaseName": "id"
				}
			],
			"additionalProperties": false,
			"name": "LayerSchema",
			"modelName": "LayerSchema",
			"version": "1.0.0"
		},
		{
			"properties": [
				{
					"type": "String",
					"name": "id",
					"camelCaseName": "id"
				},
				{
					"type": "String",
					"name": "name",
					"camelCaseName": "name"
				},
				{
					"type": "String",
					"name": "service",
					"camelCaseName": "service"
				},
				{
					"type": "Object",
					"name": "settings",
					"camelCaseName": "settings"
				},
				{
					"type": "String",
					"name": "ownerId",
					"camelCaseName": "ownerId"
				},
				{
					"type": "String",
					"name": "ownerType",
					"camelCaseName": "ownerType"
				},
				{
					"type": "String",
					"format": "date-time",
					"name": "createdAt",
					"camelCaseName": "createdAt"
				},
				{
					"type": "String",
					"format": "date-time",
					"name": "updatedAt",
					"camelCaseName": "updatedAt"
				},
				{
					"type": "String",
					"name": "repoId",
					"camelCaseName": "repoId"
				}
			],
			"required": [
				"id",
				"name",
				"service",
				"createdAt",
				"updatedAt"
			],
			"additionalProperties": false,
			"name": "Connection",
			"modelName": "Connection",
			"version": "1.0.0"
		},
		{
			"properties": [
				{
					"type": "String",
					"name": "id",
					"camelCaseName": "id"
				},
				{
					"type": "String",
					"name": "connectionId",
					"camelCaseName": "connectionId"
				},
				{
					"type": "String",
					"name": "name",
					"camelCaseName": "name"
				},
				{
					"type": "String",
					"name": "label",
					"camelCaseName": "label"
				},
				{
					"type": "Array",
					"items": {
						"properties": {
							"name": {
								"type": "String",
								"name": "name",
								"camelCaseName": "name"
							},
							"type": {
								"type": "String",
								"name": "type",
								"camelCaseName": "type"
							}
						},
						"required": [
							"name"
						],
						"additionalProperties": false
					},
					"name": "columns",
					"camelCaseName": "columns"
				}
			],
			"required": [
				"id"
			],
			"additionalProperties": false,
			"name": "LayerResource",
			"modelName": "LayerResource",
			"version": "1.0.0"
		},
		{
			"properties": [
				{
					"type": "String",
					"name": "name",
					"camelCaseName": "name"
				},
				{
					"type": "String",
					"name": "type",
					"camelCaseName": "type"
				}
			],
			"required": [
				"name"
			],
			"additionalProperties": false,
			"name": "LayerResourceColumn",
			"modelName": "LayerResourceColumn",
			"version": "1.0.0"
		}
	]
}
